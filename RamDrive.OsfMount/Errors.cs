using ByteSizeLib;

using OneOf;

namespace RamDrive.OsfMount;

/// <summary>
/// Type describing possible errors of calling <seealso cref="OsfMountRamDrive.Mount"/>.
/// </summary>
[GenerateOneOf]
public sealed partial class MountError : OneOfBase<
    MountError.DriveLetterInUseOrNotAllowed,
    MountError.TooLowSize,
    MountError.DriveSizeCannotBeGreaterThenTotalRamCapacity>
{
    public record struct DriveLetterInUseOrNotAllowed(DriveLetter? DriveLetter);
    public record struct TooLowSize(ByteSize Size);
    public record struct DriveSizeCannotBeGreaterThenTotalRamCapacity(ByteSize Size);
}

/// <summary>
/// Error that can be generated by <seealso cref="OsfMountRamDrive.ForceUnmount"/>
///  or <seealso cref="OsfMountRamDrive.Unmount"/>.
/// </summary>
public record struct DriveDoesNotExistOrNotAllowed(DriveLetter DriveLetter);

/// <summary>
/// Type describing possible errors of calling <seealso cref="OsfMountRamDrive.Unmount"/>.
/// </summary>
[GenerateOneOf]
public sealed partial class UnmountError : OneOfBase<
    UnmountError.DriveIsBusyWithAnotherProcess,
    DriveDoesNotExistOrNotAllowed>
{
    public record struct DriveIsBusyWithAnotherProcess(DriveLetter DriveLetter);
}